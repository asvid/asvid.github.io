<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://asvid.github.io//feed/rss.xml" rel="self" type="application/atom+xml" /><link href="http://asvid.github.io//" rel="alternate" type="text/html" /><updated>2024-03-14T18:03:51+00:00</updated><id>http://asvid.github.io//feed/rss.xml</id><title type="html"> | Rss</title><entry><title type="html">Android Presentation Patterns: MVI</title><link href="http://asvid.github.io//2024-02-24-MVI" rel="alternate" type="text/html" title="Android Presentation Patterns: MVI" /><published>2024-02-24T19:05:00+00:00</published><updated>2024-02-24T19:05:00+00:00</updated><id>http://asvid.github.io//MVI</id><author><name></name></author><category term="rss" /><category term="Android" /><category term="Architecture" /><category term="Model View Intent" /><category term="MVVM" /><category term="MVI" /><category term="Redux" /><category term="State Management" /><category term="Software Development" /><category term="Mobile Apps" /><category term="Design Patterns" /><category term="User Interface" /><summary type="html"><![CDATA[MVI isn't a single ready-to-implement pattern; it's more of a spectrum. This post delves into its diverse range, from basic MVVM patterns to intricate Redux-like state management, emphasizing the importance of grasping its principles for effective implementation tailored to specific project needs.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://asvid.github.io//assets/posts/mvi.png" /><media:content medium="image" url="http://asvid.github.io//assets/posts/mvi.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Android Presentation Patterns: MVVM</title><link href="http://asvid.github.io//2024-02-09-MVVM" rel="alternate" type="text/html" title="Android Presentation Patterns: MVVM" /><published>2024-02-09T19:21:00+00:00</published><updated>2024-02-09T19:21:00+00:00</updated><id>http://asvid.github.io//MVVM</id><author><name></name></author><category term="rss" /><category term="MVVM" /><category term="Android" /><category term="Model-View-ViewModel" /><category term="Android Architecture" /><category term="UI Design" /><category term="Software Development" /><summary type="html"><![CDATA[MVVM architecture promotes a clean separation of concerns, making it easier to develop and maintain complex Android applications. By adhering to the key principles and components of MVVM, developers can create scalable, testable, and maintainable apps that provide a seamless user experience.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://asvid.github.io//assets/posts/mvvm-banner.png" /><media:content medium="image" url="http://asvid.github.io//assets/posts/mvvm-banner.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Android Presentation Patterns: MVP</title><link href="http://asvid.github.io//2024-01-29-MVP" rel="alternate" type="text/html" title="Android Presentation Patterns: MVP" /><published>2024-01-29T16:04:00+00:00</published><updated>2024-01-29T16:04:00+00:00</updated><id>http://asvid.github.io//MVP</id><author><name></name></author><category term="rss" /><category term="Android" /><category term="Model-View-Presenter" /><category term="MVP" /><category term="Android Architecture" /><category term="UI Design" /><category term="Software Development" /><summary type="html"><![CDATA[Uncover the journey of evolution from MVC to MVP, tackling challenges through the integration of a Presenter and well-defined contracts. Despite the advantages MVP offers, it necessitates addressing common concerns such as boilerplate code and potential intricacies for more straightforward UIs.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://asvid.github.io//assets/posts/mvp_banner.png" /><media:content medium="image" url="http://asvid.github.io//assets/posts/mvp_banner.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Android Presentation Patterns: MVC</title><link href="http://asvid.github.io//2024-01-27-MVC" rel="alternate" type="text/html" title="Android Presentation Patterns: MVC" /><published>2024-01-27T12:34:00+00:00</published><updated>2024-01-27T12:34:00+00:00</updated><id>http://asvid.github.io//MVC</id><author><name></name></author><category term="rss" /><category term="Android" /><category term="MVC" /><category term="presentation" /><category term="design pattern" /><summary type="html"><![CDATA[Explore the early days of Android with the Model-View-Controller (MVC) pattern. Discover its challenges, like tight connections and testing troubles, through a simple example. While acknowledging its history, the article introduces modern alternatives like Model-View-Presenter (MVP), Model-View-ViewModel (MVVM), and Redux, explaining why they're better choices for today's Android app setup.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://asvid.github.io//assets/posts/mvc/mvcbanner.png" /><media:content medium="image" url="http://asvid.github.io//assets/posts/mvc/mvcbanner.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Continuous Integration and Deployment: A Developer’s Best Friends</title><link href="http://asvid.github.io//2023-06-16-ci-is-your-friend" rel="alternate" type="text/html" title="Continuous Integration and Deployment: A Developer’s Best Friends" /><published>2023-06-16T17:34:00+00:00</published><updated>2023-06-16T17:34:00+00:00</updated><id>http://asvid.github.io//ci-is-your-friend</id><author><name></name></author><category term="rss" /><category term="CI/CD" /><category term="Continuous Integration" /><category term="Continuous Deployment" /><category term="Software Development" /><category term="Automation" /><category term="DevOps" /><category term="Software Delivery" /><category term="Testing" /><summary type="html"><![CDATA[Embrace the power of Continuous Integration and Deployment (CI/CD) in software development. Automate tests, streamline workflows, and boost collaboration with user-friendly services like CircleCI, Bitrise, GitLab, and GitHub Actions. Level up your development process today!]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://asvid.github.io//assets/posts/friendly_ci.jpg" /><media:content medium="image" url="http://asvid.github.io//assets/posts/friendly_ci.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>