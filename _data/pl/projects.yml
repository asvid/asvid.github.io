- title: Wedding App (tytuł roboczy)
  description: Chciałem nauczyć się Fluttera przy okazji jakiegoś projektu, a kolega z pracy powiedział że robi aplikację na swój ślub... więc połączyłem obie rzeczy :)
    Projekt Android/iOS który wykorzystuje Firebase do przechowywania i dzielenia się zdjęciami, obsługi księgi gości i informacji o wydarzeniu.
    Jest też mapa Google z zaznaczonymi POI i szybkim przenoszeniem się do nawigacji.
    Architektura BLoC, CI/CD na Bitrise, customowe fonty i kolory na mapie.

- title: GdzieTaBiedra
  description: Aplikacja powstała na potrzeby rekrutacyjne :)
    Ale potem przepisałem ją żeby korzystała ze wzorca Uber RIBs, bazy Realm, Retrofita, RxJavy i Kotlina.
  googlePlayLink: https://play.google.com/store/apps/details?id=com.hedgehog.gdzietabiedra
  github: https://github.com/asvid/GdzieTaBiedra

- title: AirRide
  description: Nigdy nieukończony projekt kontrolera pneumatycznego zawieszenia samochodu.
    Aplikacja Androidowa łączy sięz kontrolerem zaworów (Arduino) przez Bluetooth.
    Kontrola zawieszenia jest możliwa przez wciskanie przycisków, użycie akcelerometru w telefonie lub stworzenie sekwencji która jest zapisana w bazie Realm.
    Komunikacja przez Bluetooth jest zrealizowana przez wzorzec Command co pozwoliło na łatwe zmiany i rozszerzanie możliwości.
    Zostało to przetestowane na prawdziwym samochodzie :)

- title: Fibaro
  description: Aplikacje dostępne na smartfon i tablet do kontroli systemu inteligentnego domu.
    Długożyjąca i długorozwijana aplikacja, refaktoryzowana z czasem. Zaczęliśmy używać w niej MVP i unit testów w Spocku.
    Aplikacja dostarcza również widgetów ekranowych i ma wersję na Android Wear.
  link: https://www.fibaro.com/
  googlePlayLink: https://play.google.com/store/apps/details?id=com.fibaro
  image: /assets/img/fibaro/logo%20fibaro.jpg

- title: Frigo
  description: Moja praca magisterska.
    Postanowiłem użyć Kotlina do aplikacji Androidowej kiedy jeszcze był przed wersją 1.0.
    Aplikacja korzysta z bazy Realm i Retrofit do komunikacji z aplikacją serwerową.
    GCM został użyty do natychmiastowej synchronizacji danych między użytkownikami.
    Po stronie serwera pracuje ExpressJS postawiony na Heroku z bazą MongoDB.
    W trakcie rozwoju aplikacji napisałem bibliotekę do notyfikacji - Notti.
  googlePlayLink: https://play.google.com/store/apps/details?id=com.aswiderski.frigo
  image: /assets/img/frigo/ic_launcher-web.png

- title: Notti
  description: Mała biblioteka usprawniająca korzystanie z notyfikacji na Androidzie.
    Powstała po paru godzinach szukania błędu, którym okazało się niepodanie tytułu notyfikacji w builderze,
    co nie było w żaden sposób zgłaszane jako wyjątek, ale notyfikacja się nie pojawiała :)
  github: https://github.com/asvid/Notti

- title: Dinegra
  description: Asystent podróży samochodem w formie aplikacji na Androida.
    Pozwala rejestrować trasy, spalanie, wzywać pomoc, wyświetlać POI na mapie.
    Rejestracja trasy jest używana do wyzwać lub eventów, jak w Endomondo.
    OpenGL został użyty do stworzenia animowanego bota z którym można rozmawiać w trakcie jazdy.
    Aplikacją można sterować przy pomocy komend głosowych.
    Zapewnia także funkcjonalność cichego alarmu antywłamaniowego - kiedy jest uzbrojony, aplikacja będzie wysyłać emaile z położeniem samochodu jeśli tylko oddali się od miejsca zaparkowania bez rozbrajania.
    Zaimplementowaliśmy też a'la CB przez Websocket do rozmów z kierowcami w okolicy.
  link: http://dinegra.com/
  image: /assets/img/fibaro/logo%20fibaro.jpg

- title: Counter
  description: Aplikacja-piaskownica z widgetami ekranowymi o zmiennym rozmiarze, wykresami w MPAndroidChart, bazą danych Relam i Shared Element Transition.
  github: https://github.com/asvid/Counter
  image: /assets/img/counter/ic_launcher-web.png

- title: FirebaseLogin
  description: Mała biblioteka która owija metody autoryzacji Firebase w ładniejsze API z użyciem RxJava2.
  github: https://github.com/asvid/FirebaseLogin